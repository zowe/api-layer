buildscript {
    repositories mavenRepositories
    dependencies {
        classpath libs.spring.boot.gradle.plugin
        classpath libs.jgit
    }
}

plugins {
    alias(libs.plugins.gradle.git.properties)
}

normalization {
    runtimeClasspath {
        ignore("**/*git.properties*")
        ignore("**/*build-info.properties*")
    }
}

apply plugin: 'org.springframework.boot'
apply from: "$projectDir/gradle/lite.gradle"
apply plugin: 'com.google.cloud.tools.jib'
apply from: "../gradle/jib.gradle"

def javaAgentPort = 6302
def debugPort = 5121
def componentName = "discovery-service"

setJib(componentName, javaAgentPort, debugPort)
jib.container.args.add('--spring.profiles.active=https')


springBoot {
    // This statement tells the Gradle Spring Boot plugin to generate a file
    // build/resources/main/META-INF/build-info.properties that is picked up by Spring Boot to display
    // via /info endpoint
    buildInfo {
        properties {
            // Generate extra build info:
            additional = [
                by: System.properties['user.name'],
                operatingSystem: "${System.properties['os.name']} (${System.properties['os.version']})",
                number: System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : "n/a",
                machine: InetAddress.localHost.hostName
            ]
        }
    }
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/${name}/build/resources/main/META-INF")
}

dependencies {
    api project(':apiml-tomcat-common')
    api project(':security-service-client-spring')

    implementation libs.spring.boot.starter.security
    implementation libs.spring.boot.starter.web
    implementation libs.spring.cloud.starter.eureka.server

    implementation libs.apache.commons.lang3
    implementation libs.jackson.dataformat.yaml

    testImplementation(testFixtures(project(":apiml-common")))

    testImplementation libs.spring.boot.starter.test
    testImplementation libs.rest.assured

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok
}


bootJar {
    archiveFileName = "discovery-service.jar"
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.launch.PropertiesLauncher'
    }
    archiveClassifier = "application"
}

jar {
    enabled true
    archiveClassifier = ""
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }

    debugOptions {
        port = 5011
        suspend = false
        server = true
    }

    workingDir = project.rootDir

    systemProperties = System.properties
}

publishing {
    publications {
        mavenJavaFat(MavenPublication) {
            groupId = 'org.zowe.apiml'
            artifactId = 'discovery-fat-jar'

            artifact bootJar
        }
    }
}
