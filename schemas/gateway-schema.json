{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://zowe.org/schema/gateway-config",
    "allOf": [
        { "$ref": "https://zowe.org/schemas/v2/server-base" },
        {
            "type": "object",
            "properties": {
                "components": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "gateway-service": {
                            "allOf": [
                                {"$ref":  "https://zowe.org/schemas/v2/server-base#zoweComponent"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "port": {
                                            "$ref": "#/$defs/port",
                                            "default": 7553
                                        },
                                        "debug": {
                                            "type": "boolean",
                                            "description": "Enable debug logs in gateway service"
                                        },
                                        "heap": {
                                            "type": "object",
                                            "description": "Configure JVM parameters for heap size",
                                            "properties": {
                                                "init": {
                                                    "type": "integer",
                                                    "description": "Initial heap size in MB."
                                                },
                                                "max": {
                                                    "type": "integer",
                                                    "description": "Maximum heap size in MB."
                                                }
                                            }
                                        },
                                        "apiml": {
                                            "type": "object",
                                            "description": "Zowe API ML specific properties.",
                                            "properties": {
                                                "connection": {
                                                    "type": "object",
                                                    "properties": {
                                                        "idleConnectionTimeoutSeconds" : {
                                                            "type": "integer",
                                                            "description": "Specifies a timeout limit for idle client connections, in seconds.",
                                                            "default": 5
                                                        },
                                                        "timeout": {
                                                            "type": "integer",
                                                            "description": "Specifies a timeout limit for a connection, in milliseconds.",
                                                            "default": 60000
                                                        },
                                                        "timeToLive": {
                                                            "type": "integer",
                                                            "description": "Specifies a timeout limit how long to keep open connection to be reused, in milliseconds.",
                                                            "default": 60000
                                                        }
                                                    }
                                                },
                                                "gateway": {
                                                    "type": "object",
                                                    "properties": {
                                                        "cachePeriodSec": {
                                                            "type": "integer",
                                                            "description": "Specifies time in seconds to expired of cached data about /registry endpoint.",
                                                            "default": 120
                                                        },
                                                        "maxSimultaneousRequests": {
                                                            "type": "integer",
                                                            "description": "Specifies amount of parallel connection to obtain information from other APIML instances about services to construct response of /registry endpoint.",
                                                            "default": 20
                                                        },
                                                        "refresh-interval-ms": {
                                                            "type": "integer",
                                                            "description": "Specifies time period in milliseconds for how often to update data in /registry endpoint.",
                                                            "default": 30000
                                                        },
                                                        "registry": {
                                                            "type": "object",
                                                            "description": "Gateway configuration of a service registry endpoint.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean",
                                                                    "description": "Specifies whether the /registry endpoint is enabled.",
                                                                    "default": false
                                                                },
                                                                "metadata-key-allow-list": {
                                                                    "type": "array",
                                                                    "description": "Specifies what custom metadata are displayed in the /registry endpoint.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "health": {
                                                    "type": "object",
                                                    "properties": {
                                                        "protected": {
                                                            "type": "boolean",
                                                            "description": "Specifies if the /application/health endpoint is protected or accessible without any credentials.",
                                                            "default": true
                                                        }
                                                    }
                                                },
                                                "httpclient": {
                                                    "type": "object",
                                                    "description": "Configuration of outgoing calls from the Gateway.",
                                                    "properties": {
                                                        "ssl": {
                                                            "type": "object",
                                                            "properties": {
                                                                "enabled-protocols": {
                                                                    "type": "string",
                                                                    "description": "Specifies which secured protocols cloud be used during the handshake.",
                                                                    "default": "TLSv1.2,TLSv1.3"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": {
                                                    "type": "object",
                                                    "description": "Security configuration of the Gateway",
                                                    "properties": {
                                                        "auth": {
                                                            "type": "object",
                                                            "description": "Detail configuration of authentication schemes.",
                                                            "properties": {
                                                                "jwt": {
                                                                    "type": "object",
                                                                    "description": "Detail configuration of zoweJwt scheme.",
                                                                    "properties": {
                                                                        "customAuthHeader": {
                                                                            "type": "string",
                                                                            "description": "Additional header to set JWT token in case of zoweJwt scheme."
                                                                        }
                                                                    }
                                                                },
                                                                "passticket": {
                                                                    "type": "object",
                                                                    "description": "Detail configuration of httpBasicPassTicket scheme.",
                                                                    "properties": {
                                                                        "customAuthHeader": {
                                                                            "type": "string",
                                                                            "description": "Additional header to set passticket in case of httpBasicPassTicket scheme."
                                                                        },
                                                                        "customUserHeader": {
                                                                            "type": "string",
                                                                            "description": "Additional header to set userId in case of httpBasicPassTicket scheme."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "authorization": {
                                                            "type": "object",
                                                            "description": "Authorization configuration.",
                                                            "properties": {
                                                                "endpoint": {
                                                                    "type": "object",
                                                                    "description": "Configuration of SAF resource to check authorization via HTTP call.",
                                                                    "properties": {
                                                                        "enabled": {
                                                                            "type": "boolean",
                                                                            "description": "Enable provider based on endpoint. to verify SAF authorization.",
                                                                            "default": false
                                                                        },
                                                                        "url": {
                                                                            "type": "string",
                                                                            "format": "uri",
                                                                            "pattern": "^(https?)://",
                                                                            "description": "URL of endpoint to verify SAF resource. Ie. https://&lt;zss hostname&gt;:&lt;zss port&gt;/saf-auth"
                                                                        }
                                                                    }
                                                                },
                                                                "provider": {
                                                                    "type": "string",
                                                                    "enum": ["endpoint", "native", "dummy"],
                                                                    "description": "Specifies security provider to be used by the Gateway."
                                                                }
                                                            }
                                                        },
                                                        "headersToBeCleared": {
                                                            "type": "string",
                                                            "description": "Specifies comma separated header name used to clear values in request headers.",
                                                            "pattern": "^[^,]+(,[^,]+)*$"
                                                        },
                                                        "oidc": {
                                                            "type": "object",
                                                            "properties": {
                                                                "cookie": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "sameSite": {
                                                                            "type": "string",
                                                                            "enum": ["None", "Strict", "Lax"],
                                                                            "description": "Same site used in the starting of OIDC workflow. It has to allow sharing cookies during the startup.",
                                                                            "default": "Lax"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "ssl": {
                                                            "type": "object",
                                                            "description": "Configuration of SSL/tls, handshake requirements, etc.",
                                                            "properties": {
                                                                "nonStrictVerifySslCertificatesOfServices": {
                                                                    "type": "boolean",
                                                                    "description": "Defines whether APIML should verify certificates of services in non-strict mode. Setting to true will enable the non-strict mode where APIML will validate if the certificate is trusted in turststore, but ignore the certificate Common Name or Subject Alternate Name (SAN) check. Zowe will ignore this configuration if strict mode is enabled with apiml.security.ssl.verifySslCertificatesOfServices.",
                                                                    "default": false
                                                                },
                                                                "verifySslCertificatesOfServices": {
                                                                    "type": "boolean",
                                                                    "description": "Defines whether APIML should verify certificates of services in strict mode. Setting to true will enable the strict mode where APIML will validate both if the certificate is trusted in turststore, and also if the certificate Common Name or Subject Alternate Name (SAN) matches the service hostname.",
                                                                    "default": true
                                                                }
                                                            }
                                                        },
                                                        "x509": {
                                                            "type": "object",
                                                            "description": "Client certificate configuration.",
                                                            "properties": {
                                                                "acceptForwardedCert": {
                                                                    "type": "boolean",
                                                                    "description": "To enable accepting client certificate from request header. It is used in domain APIML to accept forwarded client certificate from the central APIML.",
                                                                    "default": false
                                                                },
                                                                "certificatesUrl": {
                                                                    "type": "string",
                                                                    "format": "uri",
                                                                    "pattern": "^(https?)://",
                                                                    "description": "URL of the central gateway to obtain certificate. Request signed by this certificate are authorized to accept client certificate provided in the header."
                                                                },
                                                                "registry": {
                                                                    "type": "object",
                                                                    "description": "Security configuration of /registry endpoint.",
                                                                    "properties": {
                                                                        "allowedUsers": {
                                                                            "type": "string",
                                                                            "pattern": "^[*]?|([a-zA-Z0-9]+(,[a-zA-Z0-9]+)*)$",
                                                                            "description": "Specifies the comma-separated list of users that are permitted to use /registry endpoints. The user is obtained from the common name in the provided client certificate."
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "allOf": [
                                                                {
                                                                    "if": {
                                                                        "properties": {
                                                                            "acceptForwardedCert": {
                                                                                "const": true
                                                                            }
                                                                        }
                                                                    },
                                                                    "then": {
                                                                        "required": [
                                                                            "certificatesUrl"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "service": {
                                                    "type": "object",
                                                    "description": "General configuration of the Gateway.",
                                                    "properties": {
                                                        "additionalRegistration": {
                                                            "type": "array",
                                                            "description": "List of additional Discovery Services URLs to register with and the routing patterns.",
                                                            "minItems": 1,
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "discoveryServiceUrls": {
                                                                        "type": "string",
                                                                        "description": "List of Discovery Services URLs in one security domain. You can separate multiple urls by comma or semicolon."
                                                                    },
                                                                    "routes": {
                                                                        "$ref": "#/$defs/routes"
                                                                    }
                                                                },
                                                                "required": ["discoveryServiceUrls","routes"]
                                                            }
                                                        },
                                                        "allowEncodedSlashes": {
                                                            "type": "boolean",
                                                            "description": "When this parameter is set to true, the Gateway allows encoded characters to be part of URL requests redirected through the Gateway.",
                                                            "default": true
                                                        },
                                                        "apimlId": {
                                                            "type": "string",
                                                            "pattern": "^[a-z0-9]{1,64}$",
                                                            "description": "Specifies identifier of the domain gateway for routing purpose in the central Gateway."
                                                        },
                                                        "corsEnabled": {
                                                            "type": "boolean",
                                                            "description": "Allow CORS on gateway.",
                                                            "default": false
                                                        },
                                                        "discoveryServiceUrls": {
                                                            "type": "string",
                                                            "description": "Specifies the public URL of the Discovery Service. The system administrator at the customer site defines this parameter. It is possible to provide multiple values in order to utilize fail over and/or load balancing mechanisms.",
                                                            "pattern": "^(https?)://[^,]+(,(https?)://[^,]+)*$"
                                                        },
                                                        "externalUrl": {
                                                            "type": "string",
                                                            "format": "uri",
                                                            "pattern": "^(https?)://",
                                                            "description": "Specifies the URL how to access the Gateway from outside. It is usually the DVIPA address."
                                                        },
                                                        "forwardClientCertEnabled": {
                                                            "type": "boolean",
                                                            "description": "Enable forwarding client certificate to the next service or APIML.",
                                                            "default": false
                                                        },
                                                        "hostname": {
                                                            "type": "string",
                                                            "description": "Specifies hostname of this Gateway."
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "pattern": "^[a-z0-9]{1,64}$",
                                                            "description": "Specifies serviceId of the Gateway.",
                                                            "default": "gateway"
                                                        },
                                                        "ignoredHeadersWhenCorsEnabled": {
                                                            "type": "string",
                                                            "pattern": "^[^,]+(,[^,]+)*$",
                                                            "description": "Specifies list of header to be removed when CORS is enabled."
                                                        },
                                                        "nonSecurePortEnabled": {
                                                            "type": "boolean",
                                                            "description": "Specifies if the communication with Discovery service is unsecured (via HTTP).",
                                                            "default": false
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "$ref": "#/$defs/port",
                                                            "description": "Specifies listening port of the Gateway."
                                                        },
                                                        "securePortEnabled": {
                                                            "type": "boolean",
                                                            "description": "Specifies if the communication with Discovery service is secured (via HTTPs).",
                                                            "default": true
                                                        },
                                                        "scheme": {
                                                            "type": "string",
                                                            "description": "Specifies scheme in the Gateway URLs. Is should correlate with securePortEnabled and nonSecurePortEnabled.",
                                                            "enum": ["https", "http"]
                                                        }
                                                    },
                                                    "dependencies": {
                                                        "nonSecurePortEnabled": ["securePortEnabled", "scheme"],
                                                        "securePortEnabled": ["nonSecurePortEnabled", "scheme"],
                                                        "scheme": ["nonSecurePortEnabled", "securePortEnabled"]
                                                    }
                                                },
                                                "zoweManifest": {
                                                    "type": "string",
                                                    "description": "Specifies the location of Zowe manifest file."
                                                },
                                                "zoweManifestEncoding": {
                                                    "type": "string",
                                                    "description": "Specifies the encoding of Zowe manifest file.",
                                                    "default": "IBM1047"
                                                }
                                            }
                                        },
                                        "eureka": {
                                            "type": "object",
                                            "description": "Eureka configuration.",
                                            "properties": {
                                                "instance": {
                                                    "type": "object",
                                                    "description": "Eureka configuration related to the specific Gateway instance.",
                                                    "properties": {
                                                        "metadata": {
                                                            "type": ["object", "any"],
                                                            "description": "Specifies the Gateway metadata. For more information please check documentation."
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "rauditx": {
                                            "type": "object",
                                            "description": "Configuration of SMF records values.",
                                            "properties": {
                                                "component": {
                                                    "type": "string",
                                                    "description": "Name of the product or component issuing the SMF record.",
                                                    "default": "ZOWE"
                                                },
                                                "event": {
                                                    "type": "integer",
                                                    "description": "Event code. For more information, see description of event codes in the documentation.",
                                                    "default": 2
                                                },
                                                "fmid": {
                                                    "type": "string",
                                                    "description": "FMID of the product or component issuing the SMF record.",
                                                    "default": "AZWE001"
                                                },
                                                "qualifier": {
                                                    "type": "object",
                                                    "description": "Qualifier values issued during the authentication event.",
                                                    "properties": {
                                                        "failed": {
                                                            "type": "integer",
                                                            "description": "Event Code Qualifier for failure. The value can be between 0 and 255.",
                                                            "default": 1
                                                        },
                                                        "success": {
                                                            "type": "integer",
                                                            "description": "Event Code Qualifier for success. The value can be between 0 and 255.",
                                                            "default": 0
                                                        }
                                                    }
                                                },
                                                "subtype": {
                                                    "type": "integer",
                                                    "description": "SMF type 83 record subtype assigned to the component. For more information, see description of subtypes in the documentation.",
                                                    "default": 2
                                                }
                                            }
                                        },
                                        "server": {
                                            "type": "object",
                                            "description": "Configure gateway server properties.",
                                            "properties": {
                                                "attls": {
                                                    "type": "object",
                                                    "description": "AT-TLS configuration.",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "To enable AT-TLS aware mode.",
                                                            "default": false
                                                        }
                                                    }
                                                },
                                                "maxConnectionsPerRoute": {
                                                    "type": "integer",
                                                    "description": "How many connection should exists for single HTTP client?",
                                                    "default": 100
                                                },
                                                "maxTotalConnections": {
                                                    "type": "integer",
                                                    "description": "How many connection should exists in total?",
                                                    "default": 1000
                                                },
                                                "webSocket": {
                                                    "type": "object",
                                                    "description": "Customize websocket server parameters",
                                                    "properties": {
                                                        "maxIdleTimeout": {
                                                            "type": "integer",
                                                            "description": "The gateway acts as a server and client. This parameters customizes the default idle timeout for its client role.",
                                                            "default": 3600000
                                                        },
                                                        "connectTimeout": {
                                                            "type": "integer",
                                                            "description": "The gateway acts as a server and client. This parameters customizes the default connect timeout for its client role.",
                                                            "default": 15000
                                                        },
                                                        "stopTimeout": {
                                                            "type": "integer",
                                                            "description": "The gateway acts as a server and client. This parameters customizes the default stop timeout for its client role.",
                                                            "default": 30000
                                                        },
                                                        "asyncWriteTimeout": {
                                                            "type": "integer",
                                                            "description": "The gateway acts as a server and client. This parameters customizes the default async write timeout for its client role.",
                                                            "default": 60000
                                                        }
                                                    }
                                                },
                                                "ssl": {
                                                    "type": "object",
                                                    "description": "Network encryption for gateway service connections.",
                                                    "properties": {
                                                        "ciphers": {
                                                            "type": "string",
                                                            "description": "Specifies list of SSL/tls ciphers used during the secured communication.",
                                                            "default": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "Should gateway use encrypted communication?",
                                                            "default": true
                                                        },
                                                        "keyAlias": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the alias used to address the private key in the keystore."
                                                        },
                                                        "keyPassword": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the password associated with the private key."
                                                        },
                                                        "keyStore": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the keystore file used to store the private key. When using keyring, the value should be set to the SAF keyring location. For information about required certificates."
                                                        },
                                                        "keyStorePassword": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the password used to unlock the keystore."
                                                        },
                                                        "keyStoreType": {
                                                            "type": "string",
                                                            "pattern": "^((PKCS12)|(JCE.*RACFKS))$",
                                                            "description": "This parameter specifies the type of the keystore.",
                                                            "default": "PKCS12"
                                                        },
                                                        "protocol": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the TLS protocol version currently used by Zowe API ML Discovery Service.",
                                                            "default": "TLSv1.2"
                                                        },
                                                        "trustStore": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the truststore file used to keep other parties public keys and certificates. When using keyring, this value should be set to the SAF keyring location. For information about required certificates."
                                                        },
                                                        "trustStorePassword": {
                                                            "type": "string",
                                                            "description": "This parameter specifies the password used to unlock the truststore."
                                                        },
                                                        "trustStoreRequired": {
                                                            "type": "string",
                                                            "description": "If you do not require a truststore, change the trustStoreRequired boolean parameter to `false`.",
                                                            "default": false
                                                        },
                                                        "trustStoreType": {
                                                            "type": "string",
                                                            "pattern": "^((PKCS12)|(JCE.*RACFKS))$",
                                                            "description": "This parameter specifies the truststore type. The default for this parameter is PKCS12.",
                                                            "default": "PKCS12"
                                                        }
                                                    },
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "keyStoreType": {
                                                                        "pattern": "^JCE.*RACFKS$"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "keyStore": {
                                                                        "pattern": "^safkeyring[^:]*://"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "trustStoreType": {
                                                                        "pattern": "^JCE.*RACFKS$"
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "trustStore": {
                                                                        "pattern": "^safkeyring[^:]*://"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "tomcat": {
                                                    "type": "object",
                                                    "properties": {
                                                        "retryRebindTimeoutSecs": {
                                                            "type": "integer",
                                                            "description": "Specifies delay between attempts to restart listening port in case of TCP stack was restarted.",
                                                            "default": 10
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "spring": {
                                            "type": "object",
                                            "description": "Application framework parameters",
                                            "properties": {
                                                "application": {
                                                    "type": "object",
                                                    "description": "Basic configuration of the Gateway.",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name of the Gateway application.",
                                                            "default": "gateway"
                                                        }
                                                    }
                                                },
                                                "profiles": {
                                                    "type": "object",
                                                    "description": "Profiles that can hold multiple configuration parameters.",
                                                    "properties": {
                                                        "active": {
                                                            "type": "string",
                                                            "description": "List of the active configuration profiles.",
                                                            "pattern": "^[a-zA-Z0-9]+(,[a-zA-Z0-9]+)*$"
                                                        }
                                                    }
                                                },
                                                "security": {
                                                    "type": "object",
                                                    "description": "Security configuration.",
                                                    "properties": {
                                                        "oauth2": {
                                                            "type": "object",
                                                            "description": "OAuth2 configuration values.",
                                                            "properties": {
                                                                "client": {
                                                                    "type": "object",
                                                                    "description": "Configuration of OAuth2 communication.",
                                                                    "properties": {
                                                                        "registration": {
                                                                            "type": "object",
                                                                            "description": "Provider specific values.",
                                                                            "patternProperties": {
                                                                                "^.+$": {
                                                                                    "clientId": {
                                                                                        "type": "string",
                                                                                        "description": "The client identifier."
                                                                                    },
                                                                                    "clientSecret":{
                                                                                        "type": "string",
                                                                                        "description": "The client secret."
                                                                                    },
                                                                                    "redirectUri": {
                                                                                        "type": "string",
                                                                                        "description": "The client’s registered redirect URI that the Authorization Server redirects the end-user’s user-agent to after the end-user has authenticated and authorized access to the client."
                                                                                    },
                                                                                    "scope": {
                                                                                        "type": "array",
                                                                                        "description": "The scope(s) requested by the client during the Authorization Request flow, such as openid, email, or profile.",
                                                                                        "items": {
                                                                                            "type": "string",
                                                                                            "description": "The scope identifier."
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "provider": {
                                                                            "type": "object",
                                                                            "description": "Provider specific values.",
                                                                            "patternProperties": {
                                                                                "^.+$": {
                                                                                    "authorizationUri": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "pattern": "^(https?)://",
                                                                                        "description": "The Authorization Endpoint URI for the Authorization Server."
                                                                                    },
                                                                                    "tokenUri": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "pattern": "^(https?)://",
                                                                                        "description": "The Token Endpoint URI for the Authorization Server."
                                                                                    },
                                                                                    "userInfoUri": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "pattern": "^(https?)://",
                                                                                        "description": "The URL of endpoint to obtain details about user by provided token."
                                                                                    },
                                                                                    "userNameAttribute": {
                                                                                        "type": "string",
                                                                                        "description": "The name of the attribute returned in the UserInfo Response that references the Name or Identifier of the end-user."
                                                                                    },
                                                                                    "jwkSetUri": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "pattern": "^(https?)://",
                                                                                        "description": "The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and optionally the UserInfo Response."
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "port": {
            "type": "integer",
            "description": "TCP network port",
            "minimum": 1024,
            "maximum": 65535
        },
        "routes": {
            "type": "array",
            "description": "Routing parameters",
            "items": {
                "type": "object",
                "properties": {
                    "gatewayUrl": {
                        "type": "string",
                        "description": "The portion of the gateway URL which is replaced by the serviceUrl path."
                    },
                    "serviceUrl": {
                        "type": "string",
                        "description": "The portion of the service instance URL path which replaces the gatewayUrl part."
                    }
                },
                "required": ["gatewayUrl","serviceUrl"]
            }
        }
    }
}
