apply plugin: "org.sonarqube"

sonar {
    properties {
        property "sonar.host.url", project.getProperty("sonar.host.url")
        property "sonar.token", project.hasProperty("sonar.token") ? project.getProperty("sonar.token") : null
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.organization", "zowe"
        property "sonar.projectKey", "zowe_api-layer"
        property "sonar.projectName", "Zowe API Mediation Layer"
        property "sonar.projectVersion", project.version
        property "sonar.language", "java"
        property "sonar.links.scm", "https://github.com/zowe/api-layer"
    }
}

subprojects {
    sonar {
        properties {
            property "sonar.sources", "src/main/java"
            property "sonar.tests", "src/test/java"
        }
    }
}

project(":api-catalog-ui") {
    sonar {
        properties {
            property "sonar.sources", "frontend/src"
            property "sonar.tests", "frontend/test"
            property "sonar.javascript.lcov.reportPaths", "frontend/coverage/lcov.info"
            property "sonar.exclusions", "**/*.test.*, **/*.css, **/*index.js, **/*setupTests.js"
        }
    }
}

project(":zowe-cli-id-federation-plugin") {
    sonar {
        properties {
            property "sonar.sources", "src"
            property "sonar.tests", "__tests__"
            property "sonar.javascript.lcov.reportPaths", "__tests__/__results__/unit/coverage/lcov.info"
            property "sonar.exclusions", "**/*index.ts, **/*healthCheck.Handler.ts"
        }
    }
}

project(":onboarding-enabler-nodejs") {
    sonar {
        skipProject = true
    }
}

project(":onboarding-enabler-nodejs-sample-app") {
    sonar {
        skipProject = true
    }
}

project(":onboarding-enabler-micronaut-sample-app") {
    sonar {
        skipProject = true
    }
}

project(":onboarding-enabler-spring-sample-app") {
    sonar {
        skipProject = true
    }
}

project(":platform") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":api-catalog-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":discovery-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":caching-service-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":apiml-common-lib-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":apiml-sample-extension-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project: sonar does not apply
project(":gateway-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project: sonar does not apply
project(":zaas-package") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":apiml-sample-extension") {
    sonar {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":mock-services") {
    sonar {
        skipProject = true
    }
}

project(":integration-tests") {
    sonar {
        properties {
            property "sonar.sources", "nosonar"
            property "sonar.exclusions", "nosonar/**/*"
            property "sonar.test", "src/test/java"
            property "sonar.java.binaries", "build/libs"
            property "sonar.junit.reportPaths","build/test-results/test"
        }
    }
}
