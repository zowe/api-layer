apply plugin: 'jacoco'

ext.javaProjectsWithUnitTests = [
    'api-catalog-services',
    'common-service-core',
    'discoverable-client',
    'discovery-service',
    'apiml-common',
    'apiml-utility',
    'caching-service',
    'gateway-service',
    'mock-services',
    'onboarding-enabler-java',
    'onboarding-enabler-spring',
    'security-module',
    'security-service-client-spring',
    'onboarding-enabler-micronaut',
    //'onboarding-enabler-micronaut-sample-app',
    'apiml-security-common',
    'zaas-client',
    'certificate-analyser',
    'apiml-tomcat-common',
    'apiml-extension-loader',
    'zaas-service'
]

ext.jacocoProjects = subprojects.findAll { it.name in javaProjectsWithUnitTests }

configure(jacocoProjects) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    jacoco {
        toolVersion = libs.versions.jacoco.get()
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }
}

task jacocoFullReport(type: JacocoReport) {
    // based on sample from https://github.com/SurpSG/jacoco-gradle-plugin-merge-coverage
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(jacocoProjects.jacocoTestReport)

    getAdditionalSourceDirs().from(
        files(jacocoProjects.sourceSets.main.allSource.srcDirs)
    )

    getSourceDirectories().from(
        files(jacocoProjects.sourceSets.main.allSource.srcDirs)
    )

    getClassDirectories().from(
        files(jacocoProjects.sourceSets.main.output)
    )

    getExecutionData().from(
        files(jacocoProjects.jacocoTestReport.executionData)
    )

    if(System.getProperty("results")) {
        for(dir in System.getProperty("results").split(",")){
            def names = []
            fileTree(dir).visit { FileVisitDetails details ->
                names << details.file.path
            }

            getExecutionData().from(
                files(names)
            )
        }
    }


    reports {
        html.required = true
        xml.required = true
    }
}

task coverage() {
    dependsOn jacocoFullReport, ":api-catalog-ui:test", "zowe-cli-id-federation-plugin:test"
}
