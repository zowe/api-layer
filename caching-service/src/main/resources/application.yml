caching:
    storage:
        mode: inMemory
        redis:
            timeout: 60
            masterNodeUri: default:heslo@localhost:6379
            sentinel:
                enabled: false
                masterInstance: redismaster
                nodes:
                    - sentinelpassword@localhost:26379
                    - sentinelpassword@localhost:26380
                    - sentinelpassword@localhost:26381
            ssl:
                enabled: true
                keyStore: ${server.ssl.keyStore}
                keyStorePassword: ${server.ssl.keyStorePassword}
                trustStore: ${server.ssl.trustStore}
                trustStorePassword: ${server.ssl.trustStorePassword}
        infinispan:
            initialHosts: localhost[7098]
            persistence:
                dataLocation: data
logging:
    level:
        ROOT: WARN
        org.zowe.apiml: INFO
        org.zowe.apiml.enable: WARN
        org.zowe.apiml.caching: WARN
        org.springdoc: WARN
        org.springframework: WARN
        org.springframework.boot: OFF
        org.jgroups.protocols: ERROR
        com.netflix: WARN
        com.netflix.discovery: ERROR
        com.netflix.config: ERROR
        com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient: OFF
        com.netflix.discovery.DiscoveryClient: OFF
        org.springframework.boot.web.embedded.tomcat.TomcatWebServer: INFO
        org.apache.http.conn.ssl.DefaultHostnameVerifier: DEBUG #logs only SSLException
        org.apache.tomcat.util.net.SSLUtilBase: ERROR
        org.springframework.security.config.annotation.web.builders.WebSecurity: ERROR
        javax.net.ssl: ERROR

eureka:
    client:
        initialInstanceInfoReplicationIntervalSeconds: 1
        registryFetchIntervalSeconds: 1
apiml:
    enabled: true
    service:
        preferIpAddress: false

        serviceId: cachingservice
        title: Caching service for internal usage.
        description: Service that provides caching API.

        discoveryServiceUrls: https://localhost:10011/eureka/

        scheme: https

        hostname: localhost
        port: 10016
        baseUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}
        contextPath: /${apiml.service.serviceId}

        homePageRelativeUrl: ${apiml.service.contextPath}
        statusPageRelativeUrl: ${apiml.service.contextPath}/application/info
        healthCheckRelativeUrl: ${apiml.service.contextPath}/application/health
        authentication:
            scheme: x509
            headers: X-Certificate-Public,X-Certificate-DistinguishedName,X-Certificate-CommonName
        routes:
            -   gateway-url: "/api/v1"
                service-url: ${apiml.service.contextPath}/api/v1
        apiInfo:
            -   apiId: zowe.apiml.cachingservice
                version: 1.0.0
                gatewayUrl: api/v1
                swaggerUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/v3/api-docs
                documentationUrl: https://www.zowe.org
        catalog:
            tile:
                id: zowe
                title: Zowe Applications
                description: Applications which are part of Zowe.
                version: 1.0.0
        ssl:
            enabled: true
            verifySslCertificatesOfServices: true
            protocol: ${server.ssl.protocol}
            keyStoreType: ${server.ssl.keyStoreType}
            trustStoreType: ${server.ssl.trustStoreType}

            keyAlias: ${server.ssl.keyAlias}
            keyPassword: ${server.ssl.keyPassword}
            keyStore: ${server.ssl.keyStore}
            keyStorePassword: ${server.ssl.keyStorePassword}
            trustStore: ${server.ssl.trustStore}
            trustStorePassword: ${server.ssl.trustStorePassword}
        customMetadata:
            apiml:
                enableUrlEncodedCharacters: true
                gatewayPort: 10010
                gatewayAuthEndpoint: /gateway/api/v1/auth
                corsEnabled: false
    health:
        protected: true
spring:
    cloud:
        compatibilityVerifier:
            enabled: false # Should be removed when upgrade to Spring Cloud 3.x
    application:
        name: Caching service
    mvc:
        pathmatch:
            matchingStrategy: ant-path-matcher # used to resolve spring fox path matching issue
    output.ansi.enabled: always
    main:
        allow-circular-references: true
        banner-mode: ${apiml.banner:"off"}

springdoc:
    pathsToMatch: /api/v1/**

server:
    port: ${apiml.service.port}

    servlet:
        contextPath: /${apiml.service.serviceId}

    ssl:
        enabled: true
        clientAuth: want
        protocol: TLS
        enabled-protocols: TLSv1.2+TLSv1.3
        ciphers: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384
        keyStoreType: PKCS12
        trustStoreType: PKCS12

        keyAlias: localhost
        keyPassword: password
        keyStore: keystore/localhost/localhost.keystore.p12
        keyStorePassword: password
        trustStore: keystore/localhost/localhost.truststore.p12
        trustStorePassword: password

management:
    endpoints:
        migrate-legacy-ids: true
        web:
            base-path: /application
            exposure:
                include: health,info
    health:
        defaults:
            enabled: false
    endpoint:
        health:
            showDetails: always
---
logging:
    level:
        ROOT: INFO
        com.netflix.discovery.shared.transport.decorator: DEBUG
        org.zowe.apiml: DEBUG
        org.zowe.apiml.enable: DEBUG
        org.zowe.apiml.caching: DEBUG
        org.springframework: INFO
        org.apache: INFO
        org.apache.http: DEBUG
        com.netflix: INFO
        org.hibernate: INFO
        org.jgroups.protocols: ERROR
        org.springframework.web.servlet.PageNotFound: WARN
        org.ehcache: INFO
        org.apache.tomcat.util.net: DEBUG
        org.springframework.security.web: INFO
        javax.net.ssl: INFO

spring.config.activate.on-profile: dev

logbackServiceName: ZWEACS1

---
spring.config.activate.on-profile: attls

server:
    attls:
        enabled: true
    ssl:
        enabled: false

apiml:
    service:
        scheme: http

eureka:
    instance:
        nonSecurePortEnabled: true
        securePortEnabled: false

---
spring.config.activate.on-profile: debug

logging:
    level:
        ROOT: INFO
        org.apache.tomcat.util.net: DEBUG
        org.jgroups: DEBUG
